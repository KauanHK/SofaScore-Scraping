from typing import Callable, Union, List, Dict, Self
from utils import Score

class Base:

    def input(self) -> "NextData": ...

class MainTournaments(Base):

    def __init__(self) -> None: ...
    def load(self) -> List["Tournament"]: ...
    def json(self) -> Dict[str, int]: ...

class Categories(Base):

    def __init__(self) -> None: ...
    def load(self) -> List["Category"]: ...
    def json(self)  -> Dict[str, int]: ...

class Category(Base):
    
    def __init__(self, id: int, name: str | None = None) -> None: ...
    def load(self) -> List["Tournament"]: ...
    def json(self) -> Dict[str, int]: ...

class Tournament(Base):

    def __init__(
            self,
            id: int,
            category: Category,
            name: str | None = None
            ) -> None: ...
    def load(self) -> List["Season"]: ...
    def json(self) -> Dict[str, int]: ...
        
class Season(Base):

    def __init__(
            self,
            id: int,
            tournament: Tournament,
            year: int | None = None
            ) -> None: ...
    @property
    def current_round(self) -> int: ...
    def load(self, n: int = -1) -> List["Round"]: ...
    def input(self) -> list["Round"]: ...

class Round(Base):

    def __init__(self, n: int, season: Season) -> None: ...
    def load(self) -> List["Match"]: ...
    def __iter__(self) -> Self: ...
    def __next__(self) -> "Match": ...

class Team:
     
    def __init__(self, id: int, name: str, score: Score) -> None: ...

class Match:

    def __init__(
            self,
            id: int,
            round: Round,
            home: "Team",
            away: "Team"
            ) -> None: ...
    
    def json(self) -> Dict: ...
    def csv(self) -> List[List]: ...
    def load_players_stats(self): ...
    def save(self) -> None: ...


NextData = Union[Category, Tournament, Season, Match, Tournament]